name: Publish

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: [3.6, 3.7, 3.8]
        include:
          - python: 3.6
            python-name: cp36
          - python: 3.7
            python-name: cp37
          - python: 3.8
            python-name: cp38

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python environment
        uses: actions/setup-python@v1.1.1
        with:
          # Version range or exact version of a Python version to use, using semvers version range syntax.
          python-version: ${{ matrix.python }} # optional, default is 3.x
          # The target architecture (x86, x64) of the Python interpreter.
          architecture: x64 # optional, default is x64
      - name: Set up a Rust toolchain
        uses: hecrj/setup-rust-action@v1.3.1
        with:
          # The toolchain name, such as stable, nightly, or 1.8.0
          rust-version: nightly # optional, default is stable
          # The toolchain components to install, comma-separated
          components: clippy # optional, default is
          # The toolchain targets to add, comma-separated
          # targets: # optional, default is
      - name: Install build dependencies
        run: pip install maturin jupyter numpy twine
      - name: Build wheel
        id: build-wheel
        run: |
          maturin build --release
          wheel=`ls target/wheels/*${{ matrix.python-name }}*.whl`
          echo $wheel
          echo "::set-output name=wheel::$wheel"
      - uses: actions/upload-artifact@v1
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-name}}
          path: target/wheels
      - name: Upload to Release
        uses: JasonEtco/upload-to-release@v0.1.1
        with:
          args: ${{ steps.build-wheel.outputs.wheel }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload to PyPI
        run: twine upload --repository-url https://test.pypi.org/legacy -u emakryo target/wheels/*
        env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
